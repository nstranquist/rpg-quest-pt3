{"version":3,"sources":["components/box-header.tsx","components/box-sidebar.tsx","components/action-btn.tsx","components/box-messageboard.tsx","components/checkbox-music.tsx","components/box-inventory.tsx","styles/App.styles.ts","fbConfig.ts","store/user/profile.ts","screens/Home/index.tsx","components/btn-messageBtn.tsx","screens/Title/index.tsx","screens/Castle/index.tsx","styles/HUD.style.ts","components/HUD/index.tsx","styles/Battle.style.ts","store/battle/index.ts","store/selectors.ts","screens/Battle/index.tsx","screens/Shop/index.tsx","screens/Character/index.tsx","store/user/auth.ts","screens/Auth/Login.tsx","screens/Auth/Signup.tsx","utils/PrivateRoute.tsx","App.tsx","store/user/stats.ts","store/user/index.ts","store/game/index.ts","store/root.ts","configureStore.ts","serviceWorker.ts","index.tsx"],"names":["BoxHeader","title","titlePadding","fontSize","colEnd","colStart","className","style","padding","gridColumnStart","gridColumnEnd","BoxSidebar","sectionHeader","imgSrc","imgAlt","headerDisplay","direction","display","src","alt","ActionButton","linkRoute","linkName","margin","backgroundSize","backgroundImage","lineHeight","handleClick","to","onClick","userSelect","MozUserSelect","BoxMessageBoard","message","boardTitle","marginTop","background","color","border","width","textAlign","fontWeight","letterSpacing","MusicCheckbox","toggleAudio","myAudio","document","getElementById","paused","play","pause","position","top","right","id","type","onChange","paddingLeft","checked","InventoryBox","playerName","playerLevel","playerXP","playerGold","playerHP","left","height","float","MainAspect","styled","main","GridWrapper","div","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","setPersistence","Auth","Persistence","SESSION","firestore","auth","initialState","name","xp","level","gold","hp","damage","loading","errors","profileReducer","state","action","profileData","xpReward","goldReward","err","Home","this","props","profile","getProfileData","actionBtnBg","React","Component","connect","user","dispatch","console","log","doc","currentUser","uid","onSnapshot","data","username","BoxMessageBtn","buttonName","handleOnClick","screenLink","cursor","TitleScreen","toggleScreen","handleId","useState","showLogin","idInput","setIdInput","bottom","zIndex","querySelector","opacity","paddingTop","transform","flexDirection","justifyContent","alignItems","onInput","e","target","value","placeholder","Castle","HUDContainer","Statbars","HUDBar","HealthBar","HUDRatio","ManaBar","HUDCircle","span","HUD","LoadingBattleWrapper","BattleMenuWrapper","endBattle","playerWon","update","FieldValue","increment","otherReward","active","round","monsterName","monsterHealth","monsterDamage","battleReducer","playerIsAlive","monsterIsAlive","battle","Battle","handleAttack","setState","playersTurn","startPlayerTurn","setTimeout","startMonsterTurn","toggleBattleMenu","winner","render","handleUseItem","handleSelectInventory","whoWon","playerHUDRatio","player","monsterHUDRatio","startBattle","prevProps","borderTopRightRadius","borderTopLeftRadius","getState","collection","get","then","snap","length","docs","random","Math","floor","monster","baseHealth","baseDamage","catch","playerHealth","Shop","gridRowStart","gridRowEnd","Character","isAuth","token","loadingAuth","authReducer","attemptLogin","email","password","signInWithEmailAndPassword","setEmail","setPassword","loginFormStyle","onSubmit","preventDefault","attemptSignup","createUserWithEmailAndPassword","set","castle","maxItems","setUsername","component","rest","App","autoPlay","loop","path","Login","Signup","exact","Title","totalDeaths","statReducer","combineReducers","stats","battleActive","gameReducer","rootApp","game","configureStore","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","f","Boolean","location","hostname","match","store","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4033999e.chunk.js","sourcesContent":["import React from 'react'\n\ninterface IProps {\n  title: string,\n  titlePadding?: string,\n  fontSize?: string\n  colEnd?: number\n  colStart?: number\n  style?: any\n}\n\nconst BoxHeader: React.FC<IProps> = ({\n  title,\n  titlePadding,\n  fontSize,\n  colEnd,\n  colStart=1,\n}) => (\n  <div className=\"box-header\">\n    <h1 className=\"title-header\"\n      style={{\n        padding: titlePadding,\n        gridColumnStart: colStart,\n        gridColumnEnd: colEnd,\n        fontSize: fontSize\n      }}>\n      {title}</h1>\n  </div>\n)\n\nexport default BoxHeader","import React from 'react'\n\ninterface IProps {\n  sectionHeader?: string\n  imgSrc: string\n  imgAlt: string\n  direction?: string\n  headerDisplay: string\n}\n\nconst BoxSidebar: React.FC<IProps> = ({\n  sectionHeader,\n  imgSrc,\n  imgAlt,\n  headerDisplay,\n  direction = 'left',\n}) => (\n  <div className={'box-sidebar box-sidebar-' + direction}>\n    <div className=\"container sidebar\">\n      <div className=\"section-header\" style={{ display: headerDisplay }}>\n        {sectionHeader}</div>\n      <img src={imgSrc} alt={imgAlt} className=\"img-fluid\" />\n    </div>\n  </div>\n)\n\nexport default BoxSidebar","import React from 'react'\nimport { Link } from 'react-router-dom'\n\ninterface IProps {\n  linkName: string\n  linkRoute?: string\n  margin?: string\n  backgroundSize?: string\n  backgroundImage?: string\n  fontSize?: string\n  padding?: string\n  lineHeight?: string\n  handleClick?(): any\n}\n\nconst ActionButton: React.FC<IProps> = ({\n  linkRoute,\n  linkName,\n  margin,\n  backgroundSize,\n  backgroundImage,\n  fontSize,\n  padding,\n  lineHeight,\n  handleClick,\n}) => (\n  <div className=\"box-btn\" style={{ margin, backgroundImage,\n  }}>\n    <div className=\"container btn-container\" style={{ backgroundSize }}>\n      <Link to={linkRoute!} className=\"action-btn\" onClick={handleClick}\n        style={{ lineHeight, userSelect: 'none', MozUserSelect: 'none', fontSize, padding }}>\n        {linkName}\n      </Link>\n    </div>\n  </div>\n)\n\nexport default ActionButton\n","import React from 'react';\n\ninterface IProps {\n  message: string\n  boardTitle?: string\n  margin?: string\n  padding?: string\n}\n\nconst BoxMessageBoard: React.FC<IProps> = ({\n  message,\n  boardTitle='Message Board',\n  margin='1em',\n  padding='.3em'\n}) => (\n  <div className=\"box_message-board\" style={{\n    gridColumnStart: 2,\n    gridColumnEnd: 4,\n    padding,\n    margin,\n    marginTop: 0,\n    background: '#896C42',\n    color: '#f7f7f7 ',\n    border: '.25em solid #563E26',\n  }}>\n    <div className=\"message-board\" style={{\n      width: '100%', textAlign: 'center'\n    }}>\n      <h3 style={{\n        fontWeight: 400, letterSpacing: '5px', fontSize: '1.5em', lineHeight: '1.5em',\n      }}>{boardTitle}</h3>\n      <p style={{ letterSpacing: '1.5px' }}>\n        {message}\n      </p>\n    </div>\n  </div>\n)\n\nexport default BoxMessageBoard","import React from 'react'\n\nconst MusicCheckbox: React.FC = () => {\n\n    //TODO: provide better typings for these 2 functions, then remove ts-ignore\n    const toggleMusicCheckbox = () => { // uncheck box and toggle audio\n      //@ts-ignore\n      document.getElementById('music-input')!.checked ^= 1;  //toggles checkbox\n      toggleAudio();\n    }\n    const toggleAudio = () => {\n      let myAudio = document.getElementById('title_music')\n      //@ts-ignore\n      myAudio!.paused ? myAudio!.play() : myAudio!.pause();\n    }\n\n  return (\n    <div style={{\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      padding: '.3em',\n      margin: '.3em'\n    }} >\n      <input id=\"music-input\" type=\"checkbox\" onChange={toggleAudio} />\n      <span style={{ color: 'white', paddingLeft: '.3em', userSelect: 'none' }}\n        onClick={toggleMusicCheckbox}>\n        Mute</span>\n    </div>\n  )\n}\n\nexport default MusicCheckbox","import React from 'react';\n\ninterface IProps {\n  playerName: string\n  playerXP: number\n  playerLevel: number\n  playerGold: number\n  playerHP: number\n}\n\nconst InventoryBox: React.FC<IProps> = ({\n  playerName,\n  playerLevel,\n  playerXP,\n  playerGold,\n  playerHP\n}) => (\n  <div className='top-inventory' style={{\n    position: 'absolute',\n    top: '1em', left: '1em',\n    width: '10em', height: 'auto'\n  }}>\n    <div style={{\n      position: 'relative', width: '100%', height: '100%', border: '1px solid red', color: 'white',\n      background: '#333', padding: '.2em .3em .2em .3em'\n    }}>\n      <div style={{ textAlign: 'center' }}>{playerName}</div>\n      <div>lvl: <span style={{ float: 'right' }}>{playerLevel}</span></div>\n      <div>xp: <span style={{ float: 'right' }}>{playerXP}</span></div>\n      <div>gold: <span style={{ float: 'right' }}>{playerGold}</span></div>\n      <div>health: <span style={{ float: 'right' }}>{playerHP}</span></div>\n    </div>\n  </div>\n)\n\nexport default InventoryBox\n","import styled from 'styled-components'\n\nexport const MainAspect = styled.main`\n  width: 100vw;\n  height: 75vw;\n  background: pink;\n  max-height: 100vh;\n  max-width: 133.33vh;\n  margin: 0 auto;\n  position: absolute;\n  top: 0; bottom: 0;\n  left: 0; right: 0;\n  background-image: url(\"/images/bg-screen.png\");\n  background-repeat: no-repeat;\n  background-size: cover;\n`\n\nexport const GridWrapper = styled.div`\n  display: grid;\n  grid-template-rows: 20% 1fr 1fr 1fr;\n  width: 100%;\n  height: 100%;\n`\n\n///* 16/9 = 1.778 */\n /* height:width ratio = 9/16 = .5625  */","import * as firebase from 'firebase'\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCUWGVSSzUCADbCMiNHoD4bKKXhWSo4eXw\",\n  authDomain: \"rpg-quest-4174a.firebaseapp.com\",\n  databaseURL: \"https://rpg-quest-4174a.firebaseio.com\",\n  projectId: \"rpg-quest-4174a\",\n  storageBucket: \"rpg-quest-4174a.appspot.com\",\n  messagingSenderId: \"925619050657\",\n  appId: \"1:925619050657:web:756f37fd629f3fd61238e0\",\n  measurementId: \"G-38VGXRHC25\"\n};\n\nfirebase.initializeApp(firebaseConfig)\n\nfirebase.auth().setPersistence(firebase.auth.Auth.Persistence.SESSION)\n\nexport const firestore = firebase.firestore()\nexport const auth = firebase.auth()","// manages user profile data state\n// includes types, actions, and reducers\nimport { Dispatch } from 'redux'\nimport { auth, firestore } from '../../fbConfig'\n\n// TYPES:\nexport interface ProfileState {\n  name: string\n  xp: number | null  // move to backend\n  level: number | null // move to backend\n  gold: number | null\n  hp: number | null\n  damage: number | null // or undefined?\n  loading: boolean\n  errors: any\n}\n\ninterface getProfileData {\n  readonly type: 'SET_PROFILE_DATA'\n  profileData: ProfileState // beware of shallow copying\n}\ninterface damagePlayer {\n  readonly type: 'DAMAGE_PLAYER'\n  damage: number\n}\ninterface addReward {\n  readonly type: 'ADD_REWARD'\n  xpReward: number\n  goldReward: number\n  otherReward?: any\n}\n\ntype ProfileActionTypes =\n  | getProfileData\n  | damagePlayer\n  | addReward\n  | { readonly type: 'SET_PROFILE_ERRORS', err: any }\n  | { readonly type: 'LOADING_PROFILE' }\n\n\n// ACTIONS:\nexport const getProfileData = () => (dispatch: Dispatch) => {\n  console.log('called get profile data action')\n  dispatch({ type: 'LOADING_PROFILE' })\n  firestore\n    .doc(`profiles/${auth.currentUser!.uid}`)\n    .onSnapshot((doc) => {\n      console.log('doc snapshot from thunk:', doc)\n      const profileData = {\n        name: doc.data()!.username,\n        xp: doc.data()!.xp,\n        level: doc.data()!.level,\n        gold: doc.data()!.gold,\n        hp: doc.data()!.hp,\n        damage: doc.data()!.damage,\n      }\n      dispatch({ type: 'SET_PROFILE_DATA', profileData})\n    }, err => {\n      console.log(err)\n      dispatch({ type: 'SET_PROFILE_ERRORS', err})\n    })\n}\n\n\n// REDUCER:\nconst initialState: ProfileState = {\n  name: '',\n  xp: null,\n  level: null,\n  gold: null,\n  hp: null,\n  damage: null,\n  loading: false,\n  errors: null,\n}\n\nconst profileReducer = (\n  state = initialState,\n  action: ProfileActionTypes\n): ProfileState => {\n  switch(action.type) {\n    case 'SET_PROFILE_DATA':\n      return {\n        ...state,\n        name: action.profileData.name,\n        xp: action.profileData.xp,\n        level: action.profileData.level,\n        gold: action.profileData.gold,\n        hp: action.profileData.hp,\n        damage: action.profileData.damage,\n        loading: false,\n        errors: null\n      }\n    case 'DAMAGE_PLAYER':\n      return {\n        ...state,\n        hp: state.hp! - action.damage\n      }\n    case 'ADD_REWARD':\n      return {\n        ...state,\n        xp: state.xp! + action.xpReward,\n        gold: state.gold! + action.goldReward,\n        // leaving out 'otherReward' for now\n      }\n    case 'LOADING_PROFILE':\n      return {\n        ...state,\n        loading: true,\n      }\n    case 'SET_PROFILE_ERRORS':\n      return {\n        ...state,\n        loading: false,\n        errors: action.err\n      }\n    default:\n      return state\n  }\n}\n\nexport default profileReducer\n","import React from 'react'\nimport { connect } from 'react-redux'\n//import { Route, Redirect, Link } from 'react-router-dom'\n\n//import ui components\nimport BoxHeader from '../../components/box-header'\nimport BoxSidebar from '../../components/box-sidebar'\nimport MenuButton from '../../components/action-btn'\nimport MessageBox from '../../components/box-messageboard'\nimport MusicCheckbox from '../../components/checkbox-music'\nimport InventoryBox from '../../components/box-inventory'\nimport { GridWrapper } from '../../styles/App.styles'\n\nimport { getProfileData, ProfileState } from '../../store/user/profile'\nimport { RootState } from '../../store/root'\n\nimport '../screen.css'\n\n//const API_URL = 'https://us-central1-rpg-quest-4174a.cloudfunctions.net/api'\n\ninterface IProps {\n  profile: ProfileState\n  getProfileData(): void\n}\n\nclass Home extends React.Component<IProps> {\n  // constructor here if needed (maybe switch to functional component)\n\n  componentDidMount() {\n    // only load profile data on first mount\n    if(!this.props.profile.xp && !this.props.profile.gold && !this.props.profile.hp && !this.props.profile.level)\n      this.props.getProfileData()\n  }\n\n  render() {\n    const { name, xp, level, gold, hp } = this.props.profile\n\n    return (\n      <GridWrapper className=\"home-grid\">\n        <MusicCheckbox />\n        <InventoryBox\n          playerName={name}\n          playerXP={xp!}\n          playerLevel={level!}\n          playerGold={gold!}\n          playerHP={hp!} />\n        <BoxHeader title='RPGQuest' />\n        <BoxSidebar headerDisplay='none'\n          imgSrc='/images/player-m-02.png'\n          imgAlt='A brave warrior' />\n          {/* 4 boxes in a square (hence the different margin style values) */}\n          {/* TODO: replace with grid gutters?? */}\n        <MenuButton linkName='Battle' linkRoute='/battle' margin='1em 0 0 1em' lineHeight={lineHeight} backgroundImage={actionBtnBg} />\n        <MenuButton linkName='Character' linkRoute='/character' margin='1em 1em 0 0' lineHeight={lineHeight} backgroundImage={actionBtnBg} />\n        <MenuButton linkName='Shop' linkRoute='/shop' margin='0 0 1em 1em' lineHeight={lineHeight} backgroundImage={actionBtnBg} />\n        <MenuButton linkName='Castle' linkRoute='/castle' margin='0 1em 1em 0' lineHeight={lineHeight} backgroundImage={actionBtnBg} />\n        <MessageBox message='Battle Monsters to start earning gold and xp!' />\n      </GridWrapper>\n    )\n  }\n}\n\nconst mapStateToProps = (state: RootState) => ({\n  profile: state.user.profile,\n})\n\nexport default connect(\n  mapStateToProps,\n  { getProfileData }\n)(Home)\n\nconst lineHeight = '4.5em';\nconst actionBtnBg = 'url(/images/minecraft-wood.jpeg)';","import React from 'react';\nimport { Link } from 'react-router-dom'\n\ninterface IProps {\n  buttonName: string\n  screenLink: string\n  handleOnClick?(): void\n}\n\nconst BoxMessageBtn: React.FC<IProps> = ({\n  buttonName,\n  handleOnClick,\n  screenLink\n}) => (\n  <div className=\"box_message-btn\" onClick={handleOnClick} style={{\n    padding: '.5em',\n    margin: '1em',\n    marginTop: 0,\n    background: '#896C42',\n    border: '.25em solid #563E26',\n    cursor: 'var(--cursor-pointer)'\n  }} >\n    <div className=\"message-btn\" style={{\n      width: '100%', textAlign: 'center',\n    }}>\n      <Link to={`/${screenLink}`} style={{\n        letterSpacing: '3px', color: '#f7f7f7', cursor: 'var(--cursor-pointer)'\n      }}>\n        {buttonName}\n      </Link>\n    </div>\n  </div>\n)\n\nexport default BoxMessageBtn","import React from 'react'\nimport BoxHeader from '../../components/box-header'\nimport BoxMessageButton from '../../components/btn-messageBtn'\n\ninterface IProps {\n  toggleScreen(screenName: string): void,\n  handleId(idInput: string): void\n}\n\nconst TitleScreen: React.FC<IProps> = ({\n  toggleScreen,\n  handleId\n}) => {\n  const [showLogin, setShowLogin] = React.useState(false)\n  const [idInput, setIdInput] = React.useState('')\n\n  const toggleOverlay = () => {\n    //@ts-ignore\n    document.querySelector('.screen-overlay')!.style.display = 'none';\n    //@ts-ignore\n    document.querySelector('.title-screen-ui')!.style.zIndex = '1';\n    toggleAudio()\n  }\n\n  const toggleAudio = () => {\n    // document.getElementById('title_music')!.pause();\n  }\n\n  return (\n    <div className=\"title-screen\" style={{\n      position: 'absolute', top: 0, left: 0, right: 0, bottom: 0, width: '100%', height: '100%', zIndex: 1000\n    }}>\n      <div className=\"screen-overlay\" onClick={toggleOverlay} style={{\n        display: 'fixed', // fixed or none\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        background: 'rgba(0,0,0,.5)',\n        width: '100%',\n        height: '100%',\n        cursor: 'pointer',\n        color: 'rgba(255,255,255,.8)',\n        fontSize: '3em',\n        zIndex: 999\n      }} >\n        <img src=\"/images/play.png\" alt=\"click to play game\" style={{\n          display: 'block',\n          margin: '0 auto',\n          height: '7em',\n          opacity: '.9',\n          paddingTop: '23.5%'\n        }} />\n        <div style={{ position: 'absolute', bottom: '2.2em', left: '50%', transform: 'translateX(-50%)' }}>\n          Click Anywhere\n          </div>\n      </div>\n      <div className='title-screen-ui' onClick={toggleAudio} style={{\n        position: 'absolute', top: 0, left: 0, right: 0, bottom: 0, zIndex: -1,\n        display: 'flex', flexDirection: 'column', justifyContent: 'space-around', alignItems: 'center'\n      }}>\n        <BoxHeader title='RPG Quest' fontSize='3em' style={{ display: 'absolute', top: '1em' }} />\n        {!showLogin ? <div>\n          <BoxMessageButton screenLink='home' buttonName='Start Game' />\n          <BoxMessageButton screenLink='login' buttonName='Login' handleOnClick={() => {\n            //const newLoginState = !showLogin\n            //setShowLogin(newLoginState)\n          }} />\n          <BoxMessageButton screenLink='signup' buttonName='Create Account' />\n        </div> : (\n          <div className=\"login-input\">\n            <input onInput={(e: any) => setIdInput(e.target.value)} value={idInput} type=\"text\" placeholder=\"enter your login id\" />\n            <button onClick={() => {\n              handleId(idInput)\n              toggleScreen('home')\n            }}>Submit</button>\n          </div>\n        )}\n      </div >\n    </div >\n  );\n}\n\nexport default TitleScreen\n\n/*const overlayStyle = {\n  display: 'fixed',\n  top: 0,\n  left: 0,\n  right: 0,\n  bottom: 0,\n  background: 'rgba(0,0,0,.5)',\n  width: '100%',\n  height: '100%',\n  cursor: 'pointer',\n  color: 'rgba(255,255,255,.8)',\n  fontSize: '3em',\n}*/\n\n// cool flex: add pulsing animation to title and subtitle in rythm with background music","import React from 'react';\nimport { Link } from 'react-router-dom'\n\nimport { GridWrapper } from '../../styles/App.styles'\n\n\ninterface IProps {\n\n}\n\nconst Castle: React.FC<IProps> = ({\n\n}) => {\n  return (\n    <GridWrapper className=\"castle-grid\" style={{ color: 'white', textAlign: 'center', fontSize: '2em' }}>\n      Castle Screen\n      <br />\n      <Link to='/home' style={{color:'white'}}>\n        Back</Link>\n    </GridWrapper>\n  );\n}\n\nexport default Castle","import styled from 'styled-components'\n\n\n// might still need HUDRight props for subtracting health bar\ninterface HealthBarProps {\n  HUDRatio: string\n}\ninterface ManaBarProps {\n  HUDRatio?: string\n}\n\nexport const HUDContainer = styled.div`\n  position: absolute;\n  top: .5em;\n  display: flex;\n  align-items: center;\n  &.HUD-left {\n    left: 1em;\n  }\n  &.HUD-right {\n    right: 1em;\n    flex-direction: row-reverse;\n    text-align: right;\n  }\n`\nexport const Statbars = styled.div`\n  display: flex;\n  flex-direction: column;\n  $.HUD-left {\n    margin-left: -.14em;\n  }\n  &.HUD-right {\n    margin-right: -.14em;\n    text-align: right;\n  }\n`\nexport const HUDBar = styled.div`\n  height: .8em;\n  width: 10em;\n  border-top-right-radius: 5px;\n  border: 1px solid gold;\n`\nexport const HealthBar = styled.div<HealthBarProps>`\n  background: #DC0000;\n  height: .8em;\n  width: ${props => props.HUDRatio};\n  &.HUD-left {\n    border-top-right-radius: 5px;\n  }\n  &.HUD-right {\n    border-top-left-radius: 5px;\n    text-align: right;\n    align-self: right;\n  }\n`\nexport const ManaBar = styled.div<ManaBarProps>`\n  background: blue;\n  height: .8em;\n  width: 10em;\n  &.HUD-left {\n    border-bottom-right-radius: 5px;\n  }\n  &.HUD-right {\n    border-bottom-left-radius: 5px;\n    text-align: right;\n  }\n`\nexport const HUDCircle = styled.span`\n  height: 5em;\n  width: 5em;\n  color: red;\n  background: #333;\n  border-radius: 100%;\n  border: 3px solid gold;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 2;\n`","import React from 'react'\n\nimport { HUDContainer, HealthBar, ManaBar, Statbars, HUDBar, HUDCircle } from '../../styles/HUD.style'\n\ninterface IProps {\n  direction: string\n  HUDRatio: string\n}\n\nconst HUD:React.FC<IProps> = ({\n  direction,\n  HUDRatio\n}) => (\n  <HUDContainer className={direction} >\n    <HUDCircle>\n      Face\n    </HUDCircle>\n    <Statbars className={direction}>\n      <HUDBar>\n        <HealthBar HUDRatio={HUDRatio}  />\n      </HUDBar>\n      <HUDBar>\n        <ManaBar  />\n      </HUDBar>\n    </Statbars>\n  </HUDContainer>\n)\n\nexport default HUD","import styled from 'styled-components'\n\nexport const LoadingBattleWrapper = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: black;\n  color: white;\n  font-size: 42px;\n`\n\nexport const BattleMenuWrapper = styled.div`\n  padding-top: 1.7em;\n  margin-top: 1.2em;\n  border-top-right-radius: 2em;\n  border-top-left-radius: 2em;\n  background: rgba(0,0,0,.6);\n  border: 3px solid red;\n  grid-row-start: 2;\n  grid-row-end: 4;\n`","import { Dispatch } from \"redux\"\nimport firebase from 'firebase'\nimport { firestore, auth } from \"../../fbConfig\"\n\n// battle reducer mechanics\n\n// TYPES\n\nexport interface BattleState {\n  loading: boolean\n  active: boolean\n  round: number\n  //playerTurn: boolean\n  monsterName: string\n  monsterHealth: number | null\n  monsterDamage: number | null\n  xpReward: number | null\n  goldReward: number | null\n  otherReward?: any\n  errors: any\n}\n\nexport interface startBattle {\n  readonly type: 'SET_BATTLE'\n  monsterName: string // or id\n  monsterHealth: number\n  monsterDamage: number\n  xpReward: number\n  goldReward: number\n  otherReward?: any\n}\nexport interface damageMonster {\n  readonly type: 'DAMAGE_MONSTER'\n  damage: number\n}\n// export interface endBattle {\n//   readonly type: 'CLEAR_BATTLE'\n//   //playerWon: boolean  // true for player, false for monster\n// }\n\n// can add: buffDamage, nerfDamage, buffDefense, nerfDefense\nexport type BattleActionTypes =\n  | startBattle\n  | damageMonster\n  | { readonly type: 'INCREMENT_ROUND' }\n  | { readonly type: 'LOADING_BATTLE' }\n  | { readonly type: 'CLEAR_BATTLE' }\n  | { readonly type: 'SET_BATTLE_ERROR', err: any }\n\n// round increment\n// turn increment\n// battle over, battle winner\n// clear battle\n// battle loading\n// battle error\n// battle reward\n// battle monster\n\n// ACTIONS\nexport const startBattle = () => (dispatch: Dispatch, getState: any) => {\n  console.log('start battle called')\n  dispatch({ type: 'LOADING_BATTLE' })\n  // have to retrieve random monster\n  firestore\n    .collection('monsters') // can change ids to indexes later for easier randomizing, or store an array of their ids\n    .get()\n    .then(snap => {\n      let length = snap.docs.length\n      let random = Math.floor(Math.random() * length)\n      let monster = snap.docs[random]\n      console.log('monster selected:', monster.data()) // should include id, name, baseDamage, baseHealth\n      // get player level\n      let playerLevel = getState().user.profile.level\n      if(playerLevel < 1) playerLevel = 1\n      dispatch({\n        type: 'SET_BATTLE',\n        monsterName: monster.data().name,\n        monsterHealth: monster.data().baseHealth * playerLevel,  // a linear increase. TODO: fix to be more natural\n        monsterDamage: monster.data().baseDamage * playerLevel,\n        // will hardcode the reward for now\n        // TODO: add baseReward and randomReward game logic\n        xpReward: 15,\n        goldReward: 25,\n        otherReward: null\n      })\n    })\n    .catch(err => {\n      dispatch({ type: 'SET_BATTLE_ERROR' })\n      console.log(err)\n    })\n}\n// IDEA: replace getState with data from component? which way is better?\nexport const startPlayerTurn = () => (dispatch: Dispatch, getState: any) => {\n  console.log('round started')\n  console.log('player attacks')\n  //player attacks monster\n  dispatch({ type: 'DAMAGE_MONSTER', damage: getState().user.profile.damage })\n  if(getState().battle.monsterHealth < 1) {\n    console.log('player wins')\n    endBattle(true)\n  }\n}\n\nexport const startMonsterTurn = () => (dispatch: Dispatch, getState: any) => {\n  console.log('monster attacks')\n  //monster attacks player\n  dispatch({ type: 'DAMAGE_PLAYER', damage: getState().battle.monsterDamage })\n  if(getState().battle.playerHealth < 1) {\n    console.log('monster wins')\n    endBattle(false)\n  }\n  else dispatch({ type: 'INCREMENT_ROUND' })\n}\n\nexport const endBattle = (playerWon: boolean) => (dispatch: Dispatch) => {\n  console.log('end battle called')\n  if(playerWon) {\n    console.log('player won')\n    firestore\n      .doc(`profiles/${auth.currentUser!.uid}`)\n      .update({\n        xp: firebase.firestore.FieldValue.increment(15),\n        gold: firebase.firestore.FieldValue.increment(25),\n        // add otherRewards support later\n      })\n    dispatch({ type: 'ADD_REWARD', xpReward: 15, goldReward: 25, otherReward: null })\n    // can dispatch things to stats, etc as well\n  } else {\n    console.log('player lost') // can dispatch stat event later as well\n    dispatch({ type: 'ADD_TO_DEATHS' })\n  }\n  \n  dispatch({ type: 'CLEAR_BATTLE' })\n}\n\n\n// REDUCERS\nconst initialState: BattleState = {\n  loading: false,\n  active: false,\n  round: 0,\n  monsterName: '',\n  monsterHealth: null,\n  monsterDamage: null,\n  xpReward: null,\n  goldReward: null,\n  otherReward: null,\n  errors: null,\n  //playerTurn: true,   // can randomize later\n}\n\nconst battleReducer = (\n  state=initialState,\n  action: BattleActionTypes\n): BattleState => {\n  switch(action.type) {\n    case 'INCREMENT_ROUND':\n      return {\n        ...state,\n        round: state.round+1,\n        //playerTurn: true\n      }\n    case 'DAMAGE_MONSTER':\n      return {\n        ...state,\n        monsterHealth: state.monsterHealth! - action.damage\n      }\n    case 'LOADING_BATTLE':\n      return {\n        ...state,\n        loading: true\n      }\n    case 'SET_BATTLE':\n      return {\n        ...state,\n        monsterName: action.monsterName,\n        monsterHealth: action.monsterHealth,\n        monsterDamage: action.monsterDamage,\n        xpReward: action.xpReward,\n        goldReward: action.goldReward,\n        otherReward: action.otherReward,  // can set to null in the action\n        errors: null,\n        active: true,\n        loading: false,\n      }\n    case 'CLEAR_BATTLE':\n      return initialState\n    case 'SET_BATTLE_ERROR':\n      return {\n        ...state,\n        loading: false,\n        errors: action.err,\n      }\n    default:\n      return state\n  }\n}\n\nexport default battleReducer\n\n//export const isPlayerDead = () => state.","import { RootState } from \"./root\"\n\nexport const playerIsAlive = (state: RootState) => state.user.profile.hp! > 0\n\nexport const monsterIsAlive = (state: RootState) => state.battle.monsterHealth! > 0","import React from 'react'\nimport { connect } from 'react-redux'\n//import ui components\nimport BoxHeader from '../../components/box-header'\nimport BoxSidebar from '../../components/box-sidebar'\nimport ActionButton from '../../components/action-btn'\nimport HUD from '../../components/HUD'\n\nimport { GridWrapper } from '../../styles/App.styles'\nimport { LoadingBattleWrapper, BattleMenuWrapper } from '../../styles/Battle.style'\n\n//import Battle from '../containers/battle'\nimport { startBattle, startPlayerTurn, startMonsterTurn, endBattle } from '../../store/battle'\nimport { playerIsAlive, monsterIsAlive } from '../../store/selectors'\nimport { RootState } from '../../store/root'\n//import { battle } from '../../store/battle/battle'\n\n//import styles\nimport '../screen.css'\n\ninterface IProps {\n  player: any\n  battle: any\n  monsterHealth: number\n  playerIsAlive: boolean\n  monsterIsAlive: boolean\n  xpReward: number\n  goldReward: number\n  startBattle(): void\n  startPlayerTurn(): void\n  startMonsterTurn(): void\n  endBattle(playerWon: boolean): void\n}\ninterface IState {\n  winner: boolean\n  whoWon: string\n  playersTurn: boolean\n  playerHUDRatio: string\n  monsterHUDRatio: string\n}\n\n\n// TODO: make '100' into a max level variable, to decide the max health\n\n// IDEA: could use selectors to manage some of the battle state\n// HUD bars are 10ems each, .1em = 1%\nclass Battle extends React.Component<IProps, IState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      winner: false,\n      whoWon: '',\n      playersTurn: true,\n      playerHUDRatio: `${(this.props.player.hp / 100) * 10}em`,  // if 100 health, for every 1 pt, deducts .1em (the HUD ratio)\n      monsterHUDRatio: `${(this.props.monsterHealth / 100) * 10}em`,\n      //playersTurn: Math.floor(Math.random() * 2) === 0 ? true : false,\n    }\n    //this.battle = new Battle(); // create new battle instance\n    //this.battle.createBattle()\n    //this.startBattle();\n  }\n  componentDidMount() {\n    this.props.startBattle()\n  }\n  componentDidUpdate(prevProps: any) {\n    if(prevProps.player.hp !== this.props.player.hp)\n      this.setState({ playerHUDRatio: `${(this.props.player.hp / 100) * 10}em` })\n    if(prevProps.monsterHealth !== this.props.monsterHealth)\n      this.setState({ monsterHUDRatio: `${(this.props.monsterHealth / 100) * 10}em` })\n  }\n\n  handleAttack = () => {\n    console.log('damage called');\n    this.setState({ playersTurn: false });\n    // start battle round\n    this.props.startPlayerTurn()  // can add checking for player defeat inside thunk\n    if(!this.props.monsterIsAlive) {\n      console.log('monster has been defeated')\n      this.setState({ winner: true })\n      this.props.endBattle(true) // playerWon = true\n    }\n    else {\n      setTimeout(() => {\n        this.props.startMonsterTurn()\n        if(!this.props.playerIsAlive) {  // may need to make async\n          console.log('player has been defeated')\n          this.setState({ winner: true })\n          this.props.endBattle(false) //playerWon = false\n        }\n        else this.toggleBattleMenu()\n      }, 1000)\n    }\n  }\n\n  toggleBattleMenu = () => {\n    this.setState({ playersTurn: true }, () => this.render())\n  }\n\n  handleUseItem = () => console.log('item used')\n\n  handleSelectInventory = () => console.log('inventory item selected')\n\n  render() {\n    const {\n      loading,\n      //monsterHealth,\n      monsterDamage,\n      xpReward,\n      goldReward,\n      otherReward,\n      //playerTurn,\n    } = this.props.battle\n\n    return (\n      <GridWrapper className=\"battle-grid\" >\n        <HUD direction='HUD-left' HUDRatio={this.state.playerHUDRatio} />\n        <HUD direction='HUD-right' HUDRatio={this.state.monsterHUDRatio} />\n        <BoxHeader title='Battle'\n          colStart={2} colEnd={3} />\n        {loading && (\n          <LoadingBattleWrapper className=\"loadingScreen\">\n            Loading Battle...\n          </LoadingBattleWrapper>\n        )}\n        <BoxSidebar headerDisplay='none'\n          imgSrc='/images/player-m-02.png'\n          imgAlt='A brave warrior' />\n        <BoxSidebar headerDisplay='none'\n          imgSrc='/images/monster-01.png'\n          imgAlt='A frightening monster'\n          direction='right' />\n        {this.state.playersTurn && !this.state.winner &&\n          <BattleMenuWrapper>\n            <ActionButton linkName=\"Attack\" handleClick={this.handleAttack} lineHeight={lineHeight} backgroundSize={backgroundSize} margin={margin} />\n            <ActionButton linkName=\"Items\" handleClick={this.handleUseItem} lineHeight={lineHeight} backgroundSize={backgroundSize} margin={margin} />\n            <ActionButton linkName=\"Weapons\" handleClick={this.handleSelectInventory} lineHeight={lineHeight} backgroundSize={backgroundSize} margin={margin} />\n            <ActionButton linkName=\"Pets\" handleClick={this.handleSelectInventory} lineHeight={lineHeight} backgroundSize={backgroundSize} margin={margin} />\n            <ActionButton linkName=\"Flee\" linkRoute='/home' lineHeight={lineHeight} backgroundSize={backgroundSize} margin={'0'} />\n          </BattleMenuWrapper>\n        }\n        {this.state.winner &&\n          <div style={{\n            paddingTop: '1.7em',\n            borderTopRightRadius: '2em',\n            borderTopLeftRadius: '2em',\n            background: 'rgba(0,0,0,.6)',\n            border: '3px solid red',\n            //display: 'flex',\n            //flexDirection: 'column',\n            //justifyContent: 'center',\n            // TODO: make props below respect their parent\n          }}>\n            <div style={{ height: '6em', width: '100%', background: 'beige' }}>\n              {this.props.playerIsAlive ? (\n                <div>\n                  You Won!\n                  <p>+{this.props.xpReward} xp</p>\n                  <p>+{this.props.goldReward} gold</p>\n                </div>\n              ): (\n                'You Lost!'\n              )}\n            </div>\n            <ActionButton linkName=\"Go Back\" linkRoute='/home' lineHeight={lineHeight}\n              backgroundSize={backgroundSize} margin={margin} />\n          </div>\n        }\n      </GridWrapper>\n    );\n  }\n}\n\nconst mapStateToProps = (state: RootState) => ({\n  player: state.user.profile,\n  battle: state.battle,\n  xpReward: state.battle.xpReward,\n  goldReward: state.battle.goldReward,\n  playerIsAlive: playerIsAlive(state),\n  monsterIsAlive: monsterIsAlive(state),\n})\n\nexport default connect(\n  mapStateToProps,\n  { startBattle, startPlayerTurn, startMonsterTurn, endBattle }\n)(Battle)\n\n\nconst lineHeight = '2em';\nconst backgroundSize = '100% 120%';\nconst margin = '0 0 .5em 0'\n\n\n\n/*\n<div className=\"simulateBtn\" style={{\n      dispay: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      width: '50%',\n      margin: '0 auto'\n    }}>\n      <div>\n        <input type=\"checkbox\" />\n        <span style={{ marginLeft: '.3em' }}>simulate</span>\n      </div>\n      <div>\n        <input type=\"checkbox\" />\n        <span style={{ marginLeft: '.3em' }}>music</span>\n      </div>\n      <div>\n        <input type=\"checkbox\" />\n        <span style={{ marginLeft: '.3em' }}>sfx</span>\n      </div>\n    </div>\n    */","import React from 'react';\nimport { Link } from 'react-router-dom'\n// import components\nimport BoxHeader from '../../components/box-header';\nimport ActionButton from '../../components/action-btn';\n\n\nconst Shop: React.FC = ({\n  \n}) => {\n\n  return (\n    <div className=\"grid shop-grid\" style={{ color: 'white', textAlign: 'center', fontSize: '2em', }}>\n      <div className=\"header-row\">\n        <Link to='/home' style={{ color: 'white' }}>\n          Back</Link>\n      </div>\n      <div className=\"box-inventory\" style={{\n        color: 'white', background: '#333', border: '1px solid gold'\n      }}>\n        Inventory\n        <div>header-tab, add tabs here</div>\n      </div>\n      <div className=\"horiz-btn-box\" style={{\n        display: 'flex', flexDirection: 'row', justifyContent: 'space-around',\n        gridRowStart: 3, gridRowEnd: 4, gridColumnStart: 2, gridColumnEnd: 14,\n        margin: '.6em'\n      }}>\n        <ActionButton padding={'.3em 1.2em'} backgroundSize={'100% 100%'} fontSize={'.8em'} linkName=\"Weapons\" />\n        <ActionButton padding={'.3em 1.2em'} backgroundSize={'100% 100%'} fontSize={'.8em'} linkName=\"Items\" />\n        <ActionButton padding={'.3em 1.2em'} backgroundSize={'100% 100%'} fontSize={'.8em'} linkName=\"Armor\" />\n        <ActionButton padding={'.3em 1.2em'} backgroundSize={'100% 100%'} fontSize={'.8em'} linkName=\"Pets\" />\n        <ActionButton padding={'.3em 1.2em'} backgroundSize={'100% 100%'} fontSize={'.8em'} linkName=\"Misc\" />\n      </div>\n    </div>\n  );\n}\n\nexport default Shop","import React from 'react'\nimport { Link } from 'react-router-dom'\n\n//import ui components\nimport BoxHeader from '../../components/box-header'\nimport BoxSidebar from '../../components/box-sidebar'\nimport BoxMessageBoard from '../../components/box-messageboard'\nimport ActionButton from '../../components/action-btn'\nimport { GridWrapper } from '../../styles/App.styles'\n\n//import styles\nimport '../screen.css'\n\nconst Character: React.FC = ({\n\n}) => {\n\n\n  return (\n    <GridWrapper className=\"profile-grid\">\n      <div style={{ position: 'absolute', top: 0,right: 0, color: 'white', padding: '.2em', margin: '.2em' }}>\n        <Link to='/home' style={{ color: 'white' }}>Back</Link>\n      </div>\n      <BoxHeader title='Character' />\n      <BoxSidebar headerDisplay='none' direction='center'\n        imgSrc='/images/player-m-02.png'\n        imgAlt='A brave warrior' />\n      <div>\n        <ActionButton lineHeight={lineHeight} backgroundSize={backgroundSize} margin={margin} linkName=\"Strength\" />\n        <ActionButton lineHeight={lineHeight} backgroundSize={backgroundSize} margin={margin} linkName=\"Dexterity\" />\n        <ActionButton lineHeight={lineHeight} backgroundSize={backgroundSize} margin={margin} linkName=\"Intelligence\" />\n        <ActionButton lineHeight={lineHeight} backgroundSize={backgroundSize} margin={margin} linkName=\"Charisma\" />\n        <ActionButton lineHeight={lineHeight} backgroundSize={backgroundSize} margin={margin} linkName=\"Luck\" />\n      </div>\n      <div style={{\n        width: '100%', height: '100%'\n      }}>\n        <BoxMessageBoard boardTitle='Stats' margin='0' padding='0' message='Strength: Dexterity: Intelligence: Charisma: __Luck__: ' />\n      </div>\n    </GridWrapper>\n  )\n}\n\nexport default Character\n\nconst lineHeight = '2em';\nconst backgroundSize = '100% 200%';\nconst margin = '0 0 .5em 0';","// manages user authentication state\n// includes types, actions, and reducers\nimport { Dispatch } from 'redux'\nimport { auth, firestore } from '../../fbConfig'\n\n// TYPES:\nexport interface AuthState {\n  isAuth: boolean\n  token?: null | string\n  loadingAuth: boolean\n  errors: any\n}\n\ninterface attemptLogin {\n  readonly type: 'AUTHENTICATE'\n  email: string\n  password: string\n}\ninterface attemptSignup {\n  readonly type: 'AUTHENTICATE'\n  email: string\n  password: string\n}\ninterface logout {\n  readonly type: 'UNAUTHENTICATE'\n}\ninterface setAuthError {\n  readonly type: 'SET_AUTH_ERROR'\n  err: any\n}\n\ntype AuthActionTypes =\n  | attemptLogin\n  | attemptSignup\n  | logout\n  | setAuthError\n  | { readonly type: 'LOADING_AUTH' }\n\n\n// ACTIONS:\nexport const attemptLogin = (email: string, password: string) => (dispatch: Dispatch) => {\n  dispatch({ type: 'LOADING_AUTH' })\n  console.log('attempt login')\n  auth.signInWithEmailAndPassword(email, password)\n    .then(user => {\n      console.log('user signed up:', user)\n      dispatch({ type: 'AUTHENTICATE'})\n    })\n    .catch(err => {\n      console.log('error signing in:', err)\n      dispatch({ type: 'SET_AUTH_ERROR', err})\n    })\n}\nexport const attemptSignup = (username: string, email: string, password: string) => (dispatch: Dispatch) => {\n  dispatch({ type: 'LOADING_AUTH' })\n  console.log('attempt signup')\n  auth.createUserWithEmailAndPassword(email, password)\n    .then(user => {\n      console.log('user account created:', user)\n      dispatch({ type: 'AUTHENTICATE'})\n      firestore\n        .doc(`/profiles/${user.user!.uid}`)\n        .set({\n          username,\n          hp: 50, // baseHealth\n          damage: 8, // baseDamage (can change later based on their chosen 'class')\n          xp: 0,\n          level: 1,\n          gold: 0,\n          castle: false,\n          maxItems: 5\n        })\n        .catch(err => console.log(err)) // shouldn't be an error here, so not dispatching\n    })\n    .catch(err => {\n      console.log('signup error:', err)\n      dispatch({ type: 'SET_AUTH_ERROR', err })\n    })\n}\nexport const logout = () => (dispatch: Dispatch) => {\n  console.log('logout')\n  auth.signOut()\n    .then(() => {\n      dispatch({ type: 'UNAUTHENTICATE' })\n      console.log('signed out')\n    })\n    .catch(err => console.log(err)) // shouldn't be an error here, so not going to dispatch 'SET_AUTH_ERROR'\n}\n\n\n// REDUCER:\nconst initialState: AuthState = {\n  isAuth: false,\n  token: null,\n  loadingAuth: false,\n  errors: null\n}\n\nconst authReducer = (\n  state = initialState,\n  action: AuthActionTypes\n): AuthState => {\n  switch(action.type) {\n    case 'AUTHENTICATE':\n      return {\n        ...state,\n        isAuth: true,\n        loadingAuth: false,\n        errors: null\n      }\n    case 'UNAUTHENTICATE':\n      return {\n        ...state,\n        isAuth: false,\n        loadingAuth: false,\n        errors: null\n      }\n    case 'LOADING_AUTH':\n      return {\n        ...state,\n        loadingAuth: true,\n      }\n    case 'SET_AUTH_ERROR':\n      return {\n        ...state,\n        errors: action.err,\n        loadingAuth: false,\n      }\n    // is a clear errors dispatch needed ?\n    default:\n      return state\n  }\n}\n\nexport default authReducer","import React, { useState } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport BoxHeader from '../../components/box-header'\nimport { RootState } from '../../store/root'\nimport { attemptLogin } from '../../store/user/auth'\n\ninterface IProps {\n  isAuth: boolean\n  loadingAuth: boolean\n  errors: any\n  attemptLogin(username: string, password: string): void\n}\n\n// I'd eventually like to allow users to login with just username/password\nconst Login: React.FC<IProps> = ({\n  isAuth,\n  loadingAuth,\n  errors,\n  attemptLogin\n}) => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  \n  if(isAuth)\n    return <Redirect to='/home' />\n  \n  return (\n    <div>\n      <BoxHeader title=\"Login\" fontSize=\"32\" />\n      <form style={loginFormStyle} onSubmit={(e) => {\n        e.preventDefault()\n        attemptLogin(email, password)\n      }}>\n        {errors && <div style={{color: 'red', fontSize: '26px'}}>\n          <p>An error occured while logging in:</p>\n          <p>{errors.message}</p>  \n        </div>}\n        <div className=\"formItem\">\n          {/* <label htmlFor=\"email\">Email</label> */}\n          <input type=\"text\" id=\"username\" value={email} placeholder=\"Email...\"\n            onChange={(e) => setEmail(e.target!.value)} />\n        </div>\n        <div className=\"formItem\">\n          {/* <label htmlFor=\"password\">Password</label> */}\n          <input type=\"password\" id=\"password\" value={password} placeholder=\"*******\" \n            onChange={(e) => setPassword(e.target!.value)}/>\n        </div>\n        {!loadingAuth ? (\n          <button type=\"submit\">Login</button>\n        ) : <button>Loading...</button>}\n        \n      </form>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state: RootState) => ({\n  isAuth: state.user.auth.isAuth,\n  loadingAuth: state.user.auth.loadingAuth,\n  errors: state.user.auth.errors\n})\n\nexport default connect(\n  mapStateToProps,\n  { attemptLogin }\n)(Login)\n\nconst loginFormStyle = {\n  // margin: '0 auto',\n  // textAlign: 'center',\n  // position: 'absolute',\n  // top: 0, bottom: 0,\n  // left: 0, right: 0,\n}","import React, { useState } from 'react'\nimport { Redirect, Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport BoxHeader from '../../components/box-header'\nimport { attemptSignup, AuthState } from '../../store/user/auth'\nimport { RootState } from '../../store/root'\n\ninterface IProps {\n  auth: AuthState\n  attemptSignup(username: string, email: string, password: string): void\n}\n\nconst Signup: React.FC<IProps> = ({\n  auth,\n  attemptSignup,\n}) => {\n  const [username, setUsername] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  if(auth.isAuth)\n    return <Redirect to='/home' />\n  return (\n    <div>\n      <BoxHeader title='Signup' fontSize='32' />\n      <form onSubmit={(e) => {\n        e.preventDefault()\n        console.log('submitting signup form')\n        attemptSignup(username, email, password)\n      }}>\n        {auth.errors && <div style={{color:'red',fontSize:'26'}}>\n          <p>An error occurred when signing up</p>\n          <p>{auth.errors.message}</p>\n        </div>}\n        <div className=\"formItem\">\n          {/* <label>username</label> */}\n          <input type=\"text\" name=\"username\" value={username} placeholder=\"Username\"\n            onChange={(e) => setUsername(e.target!.value)} />\n        </div>\n        <div className=\"formItem\">\n          <input type=\"email\" name=\"email\" value={email} placeholder=\"Email\" \n            onChange={(e) => setEmail(e.target!.value)}/>\n        </div>\n        <div className=\"formItem\">\n          <input type=\"password\" name=\"password\" value={password} placeholder=\"*********\" \n            onChange={(e) => setPassword(e.target!.value)} />\n        </div>\n        {auth.loadingAuth ? (\n          <button>Loading...</button>\n        ) : (\n          <button type=\"submit\">Signup</button>\n        )}\n      </form>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state: RootState) => ({\n  auth: state.user.auth\n})\n\nexport default connect(\n  mapStateToProps,\n  { attemptSignup }\n)(Signup)\n","import React from 'react'\nimport { Route, Redirect, Link } from 'react-router-dom';\nimport { connect } from 'react-redux'\nimport { RootState } from '../store/root'\n\ninterface IProps {\n  component: any\n  isAuth: boolean\n  path: string\n}\n\nconst PrivateRoute: React.FC<IProps> = ({\n  component: Component,\n  isAuth,\n  ...rest\n}) => (\n  <Route\n    {...rest}\n    render={props =>\n      isAuth ? (\n        <Component {...props} />\n      ) : (\n        // <Redirect to='/' />\n        <div>\n          <div>Error, you aren't logged in yet</div>\n          <Link to='/'>Go Back</Link>\n        </div>\n      )}\n  />\n)\n\nexport default connect(\n  (state: RootState) => ({isAuth: state.user.auth.isAuth})\n)(PrivateRoute)","import React from 'react';\n//import { connect } from 'react-redux'\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom'\nimport Home from './screens/Home'\nimport Title from './screens/Title'\nimport Castle from './screens/Castle'\nimport Battle from './screens/Battle'\nimport Shop from './screens/Shop'\nimport Character from './screens/Character'\nimport Login from './screens/Auth/Login'\nimport Signup from './screens/Auth/Signup'\nimport PrivateRoute from './utils/PrivateRoute'\n\nimport { MainAspect } from './styles/App.styles'\n\nconst App: React.FC = () => {\n  return (\n    <Router>\n      <MainAspect>\n        <audio id=\"title_music\" src=\"/music/castle-in-the-sky-remix.mp3\" autoPlay loop />\n        <Switch>\n          <Route path='/login' component={Login} />\n          <Route path='/signup' component={Signup} />\n          {/* can look into nesting private routes later */}\n          <PrivateRoute path='/home' component={Home} />\n          <PrivateRoute path='/battle' component={Battle} />\n          <PrivateRoute path='/character' component={Character} />\n          <PrivateRoute path='/shop' component={Shop} />\n          <PrivateRoute path='/castle' component={Castle} />\n          <Route exact path='/' component={Title} />\n          <Route path='/' render={() => <Redirect to='/' />} />\n        </Switch>\n      </MainAspect>\n    </Router>\n  );\n}\n\nexport default App;\n","// can play into the 'rpg' side of the game\n// can record things like total battles won, lost, total deaths, days elapsed, etc\n\n//TYPES:\nexport interface StatState {\n  totalDeaths: number | null\n}\n\nexport type StatActions =\n  | {readonly type: 'ADD_TO_DEATHS' }\n\n\n// ACTIONS:\n\n\n\n// REDUCERS:\n// would have to be set when getting profile data... so maybe wait on this one\n\nconst initialState: StatState = {\n  totalDeaths: null\n}\n\nconst statReducer = (\n  state=initialState,\n  action: StatActions\n): StatState => {\n  switch(action.type) {\n    case 'ADD_TO_DEATHS':\n      return {\n        ...state,\n        totalDeaths: state.totalDeaths! + 1\n      }\n    default:\n      return state\n  }\n}\n\nexport default statReducer","// import profile/auth\nimport { combineReducers } from 'redux'\nimport authReducer from './auth'\nimport profileReducer from './profile'\nimport statReducer from './stats'\n\n// export user\nexport default combineReducers({\n  auth: authReducer,\n  profile: profileReducer,\n  stats: statReducer,\n})","// for managing certain states of the game, could rename to 'rpg'\n//import { Dispatch } from 'redux'\n\n// TYPE DEFINITIONS\nexport interface GameState {\n  battleActive: boolean\n  loading: boolean\n  errors: any\n  //loading? errors? 'freeze'? hmm\n  // game loop?\n}\n\n\n\nexport type GameActionTypes = \n  | {readonly type: 'LOADING_GAME' }\n  | {readonly type: 'SET_GAME_ERR', err: any }\n\n\n// ACTIONS\n\n\n// REDUCER\nconst initialState: GameState = {\n  battleActive: false,\n  loading: false,\n  errors: null,\n}\n\nconst gameReducer = (\n  state=initialState,\n  action: GameActionTypes\n): GameState => {\n  switch(action.type) {\n    case 'LOADING_GAME':\n      return {\n        ...state,\n        loading: true,\n      }\n    case 'SET_GAME_ERR':\n      return {\n        ...state,\n        loading: false,\n        errors: action.err\n      }\n    default:\n      return state\n  }\n}\n\nexport default gameReducer","import { combineReducers } from 'redux'\nimport user from './user'\nimport battle from './battle'\nimport game from './game'\n\nconst rootApp = combineReducers({\n  user,\n  battle,\n  game,\n})\n\nexport default rootApp\n\nexport type RootState = ReturnType<typeof rootApp>","import { createStore, compose, applyMiddleware, Action } from 'redux'\nimport thunk from 'redux-thunk'\nimport rootApp from './store/root'\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: any\n  }\n}\n\nconst configureStore = () => {\n  const store = createStore(\n    rootApp,\n    compose(\n      applyMiddleware(thunk),\n      window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n        ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__()\n        : (f: any) => f\n    )\n  )\n\n  return store\n}\n\nexport default configureStore","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport App from './App';\nimport configureStore from './configureStore'\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nconst store = configureStore()\n\nconst Root = () => (\n  <Provider store={store}>\n    <App />\n  </Provider>\n)\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}